'use strict';
sap.ui.define([
    'sap/ui/dt/OverlayRegistry',
    'open/ux/preview/client/thirdparty/@sap-ux-private/control-property-editor-common',
    '../../../adp/init-dialogs',
    '../../../cpe/quick-actions/utils',
    '../../../utils/core'
], function (OverlayRegistry, ___sap_ux_private_control_property_editor_common, _____adp_init_dialogs, _____cpe_quick_actions_utils, _____utils_core) {
    'use strict';
    const SIMPLE_QUICK_ACTION_KIND = ___sap_ux_private_control_property_editor_common['SIMPLE_QUICK_ACTION_KIND'];
    const DialogNames = _____adp_init_dialogs['DialogNames'];
    const handler = _____adp_init_dialogs['handler'];
    const getRelevantControlFromActivePage = _____cpe_quick_actions_utils['getRelevantControlFromActivePage'];
    const isA = _____utils_core['isA'];
    const OP_ADD_HEADER_FIELD_TYPE = 'op-add-header-field';
    const CONTROL_TYPES = ['sap.uxap.ObjectPageLayout'];
    class AddHeaderFieldQuickAction {
        kind = SIMPLE_QUICK_ACTION_KIND;
        type = OP_ADD_HEADER_FIELD_TYPE;
        get id() {
            return `${ this.context.key }-${ this.type }`;
        }
        isActive = false;
        constructor(context) {
            this.context = context;
        }
        initialize() {
            for (const control of getRelevantControlFromActivePage(this.context.controlIndex, this.context.view, CONTROL_TYPES)) {
                this.isActive = true;
                this.control = control;
                break;
            }
        }
        getActionObject() {
            return {
                kind: SIMPLE_QUICK_ACTION_KIND,
                id: this.id,
                enabled: this.isActive,
                title: this.context.resourceBundle.getText('QUICK_ACTION_OP_ADD_HEADER_FIELD')
            };
        }
        async execute() {
            const objectPageLayout = getRelevantControlFromActivePage(this.context.controlIndex, this.context.view, CONTROL_TYPES)[0];
            const headerContent = objectPageLayout.getHeaderContent();
            if (headerContent.length === 1 && isA('sap.m.FlexBox', headerContent[0])) {
                const overlay = OverlayRegistry.getOverlay(headerContent[0]) || [];
                await handler(overlay, this.context.rta, DialogNames.ADD_FRAGMENT, undefined, 'items');
            } else if (this.control) {
                const overlay = OverlayRegistry.getOverlay(this.control) || [];
                await handler(overlay, this.context.rta, DialogNames.ADD_FRAGMENT, undefined, 'headerContent');
            }
            return [];
        }
    }
    var __exports = { __esModule: true };
    __exports.OP_ADD_HEADER_FIELD_TYPE = OP_ADD_HEADER_FIELD_TYPE;
    __exports.AddHeaderFieldQuickAction = AddHeaderFieldQuickAction;
    return __exports;
});